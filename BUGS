recent bugs
------------

- the aggressive filter will occasionally encounter a false-positive match
  due to apostrophe's -- need to take then into consideration.  need a
  a better way to handle localized pre/suffix matching too as a handful
  of international words match incorrectly when an english-common suffix
  is applied.

- GL Bugs: Looks like the handling of gl contexts is severely messed up in
  bzflag, and there is no very easy cure for this. Someone obviously had
  noticed this before and commented out a glDelete statement in the
  lighting code. Details:

  bzflag uses several classes like OpenGLDisplayList to wrap gl objects.
  These classes use rep subobjects which store the actual state and
  use reference counting. The state can be as simple as an integer
  (for display lists). This integer refereces some object which is
  handled by gl internally and must be created and deleted by calling gl
  functions (like glGenLists() and glDeleteLists()). The bzflag
  classes resp. their rep classes call these functions to create and delete
  the gl objects automatically when necessary, i.e. creation happens when
  a new object is created from nothing (not a copy) and destruction happens
  when the ref coun tof the rep object falls to 0.

  The problem happens when the gl context changes, for example when the
  video resolution is changes on Linux or (I suppose) one switches on
  Windows with alt tab. It is my understanding now (I myself am clueless
  about OpenGL), that the above mentioned ids (referring to a gl display list
  object for example) are related to a gl context. So when the old gl
  context is destroyed and a new one is created and bzflag creates to
  gl objects, it might well receive an id which is still bound to a rep
  object. When that rep object's ref count falls to zero, it will call
  the gl delete function on that id, but this will now delete the new gl
  object for the new context -> oops.

  When freeing the gl context, bzflag should probably first delete all
  gl objects or at least invalidate them, so they won't be deleted when
  the other context is in place.

  I have tried to simply get rid of all the gldelete calls and then it works
  more or less, except for a strange effect where the sky/ground is messed
  up for a fraction of a second after switching resolutions.

  Another note: how is it with contexts and several window like in
  -view three/stacked? Not that I can test it because these views simply
  coredump on me.

- bzflag should use the system-supplied zlib if available. Check in
  configure?

- Mac OS X client outputs an Info.plist file with the permissions set
  incorrectly if building an application bundle via XCode.

- taking a full-screen snapshot take too long to complete. That's happening
  since we are saving in png. Profiling reveals that about 30% of the time
  is spent to get the pixel data and apply gamma correction, 70% is used
  for compression.
  Reduced compression level from 9 to 5, this speeds up compression
  by a factor of approx. 6 for me. Now glReadPixels takes the bulk of
  the time.

- changing video format during game messes up rendering on one of my
  Linux boxes (the one with hardware rendering). Most prominently, the
  ground is no longer rendered, but I mgiht also get other side effects
  as shiny pyramids. Might be related to similar problems reported by
  Windows people when using ALT-TAB and/or the shiny rabbit bug below.

- saveworld does not save world weapons
  MAC: Unfortunately world weapons aren't sent to the client, so
  there's no way for the client to write them. I suppose they could 
  be packed in the database, for only the purpose of 'saveworld'.

- Something is wrong with the shininess I think. When I play on rabbit
  server with only one other player which is rabbit. When I set the time of
  day close to sunrise, as soon as the rabbit becomes visible in 3D view,
  all buildings will turn to shiny-white. As soon as rabbit is killed,
  it turns back to normal. Also normal, when I switch off lighting.
  Would someone PLEASE buy chestal a graphics card? his doesn't handle
  the emissive property.
  (Chestal) This happens with both of my cards, where the one isn't really used
  because it's all software rendering, where the other uses hardware.
  I can reproduce this by joining my test server ducati 59155 with -solo 1.
  As soon as the rabbit bot is in view, other things get white, too.
  This is either a bug in bzflag or in the gl stack which does not reset
  the shininess or whatever properly. With more than 1 tank it's usually ok,
  so I guess after drawing the rabbit tank it draws a rogue tank and resets
  the material data.

- Spawn code sometimes spawns you mid-air

- doc/guide/NetworkProtocol.xml is not up to date

- list server includes counts for players running on non-public/mis-configured
  servers on the same machine on different ports.  if server runs on port 5156
  with publicaddr set to machine:5156 and then also runs another on 59999 with
  publicaddr set to machine:5156 (by accident or otherwise), then player joins
  to the 59999 server mask the 5156 server.  it'd be easy to blow this off as
  expected behavior, but I expect one can also trojan any server's counts 
  using this same technique..

- bunny hunt issues.  observed the player selection consistently toggle
  between the best player (score-wise) and one of the worst players non-stop
  for several (10+) minutes without choosing many intermediate players that
  not only had better scores and were not dead and were not previously bunny
  and had a much better value for killCount * (killCount - deathCount)
  mac suspects valid players are getting skipped altogether for some reason..
  (player state is not alive ?, etc) need to test that theory. 
  Perhaps a client hack is foobar'ing it as well. This seems to happen only occasionally.
  Often rabbit selection works just fine, but when its broken, it stays broken.
  [I think I've fixed this.  Paused flag wasn't getting reset when player slot
  wasreused.  Please let me know if you're still seeing this happening with
  latest cvs. -shkoo]

- Shift+Tab seems to be bound to jump without being bound to jump
  It doesn't happen on Linux. Shift+Tab action is untranslated by XLookupString
  (xfree86 4.3), so need custom code to go into bzflag. 

- menu does not display modified values after quitting and returning, although
  the bindings appear to remain in effect.
  I cannot reproduce this. Can someone give more details, maybe an example?

- Flaghelp falls into the radar area when radar is 'bigger'

- Address Exception reported when unpacking a FlagType in MsgFlagUpdate on
  client in Rabbit game. The reported message buffer address was bad (ie
  0xbfffd7ed) Could we be running off the end of the packet (ie count is
  fubar'ed?) Perhaps add sanity check for not overruning end of buffer.

- On a FFA game, where no purple was allowed a Team size of 65535 was displayed
  for Purple.

- bzadmin seems to be less responsive over the network than bzflag - a
  bzadmin client can get kicked from a very active game by the server
  for causing it to queue too many packages (there's a limit at 20kB, when I
  removed it the queue went up to at least 64kB)

- os x client audio is very choppy when the user has a sound card installed

- bzfs should re-resolve the list server IP if it can't reach it for an update

- make maintainer-clean does not enter DIST_SUBDIRS
  so all Makefile.in and Makefile files are not removed correctly
  (this is probably a bug in automake 1.4, not in our files)

older bugs in BZFlag
---------------------

see the bug tracker on SourceForge for more
http://SourceForge.net/tracker/?group_id=3248&atid=103248

* exploding tank parts sometimes move along the ground instead of
   flying up into the air.

* not dropping a flag grabbed just before being destroyed

* same stipple on teleporters and phantom zone, making phatom
   tank behind teleporter virtually invisible when blending is off.

* not drawing back to front when depth buffer is on:
   flag edges can't be antialiased right
   teleporter blended on top of shots in front of them

* line stipple doesn't (can't) match polygon stipple
   messes up shadow of flag stem

* can sometimes appear in front of bad guys

* some linux systems get XIO error on startup
   no idea why but it's consistent on those systems
   (probably XIJoystick code?)

* not blanking screen during win32 startup
   should black out screen before changing resolutions
   should raise on top of task bar
   also black out screen when quitting until resolution restored

* error dialogs on win32 may appear off screen
   only when display resolution was changed
