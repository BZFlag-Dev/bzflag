recent bugs
------------

-- events --
- Looks like onspawn/ondeath world weapon events get ignored by the event
  handler.  Probably ought to handle them since they're doc'ed.

-- bots--
- Segfault - bzflag -solo 2 gets rejected - too many bots from a single IP
  The message doesn't display on the client and the client crashes
  Possibly related to 
  
- client side bots make the client get disconnected (read error)
  below.
  
- client side bots don't even show as tanks.

-- crashes ---
- Segfault - two clients connecting to the server then leaving causes the 
  server to crash
   
- client crashes upon receipt of a corrupted MsgFlagUpdate message.
  (See http://bzflag.secretplace.us/packet.txt for an example)
  
-- simulation --
- at high frame rates (approx. > 500), isDeadReckoningWrong() often returns true
  when tank is moving at constant speed. This leads to many unnecessary
  MsgPlayerUpdate packets to be sent. Maybe floating point inaccuracies?

  Also, at high frame rates, the position update in BaseLocalPlyer::update
  will be too large, because dt is artificially increased then. In 2_0
  this was fixed by simply skipping the update function. We now have an
  outer loop in playing.cxx (doUpdates) which divides a big dt into a
  number of smaller steps, so the fix must be done differently here.

  The DR problem is probably related to the wrong updates.
  simple fix is just a fps cap.

-- regressions--
- jumping is broken; heigth and direction of jumping affected.

- TH is broken (says the target stole the theifs flag; theif cannot
  pick up any more flags, but doesn't seem to have one (but is drawn with
  one))

- GM does not seem to lock on reliably (try against a remote client,
  bots work fine)
  
- bullets do no longer bounce off the walls in replays
  even when ricochets have been enabled
  
-- documentation --
- doc/guide/NetworkProtocol.xml is not up to date

-- bans --
- idbans do not respect the antiban permission

- idbans report the wrong time remaining on a idbanlist

- a banned registered player that gets added to both the banList and
  idBanList is not listed in the latter on a idbanlist yet prevented
  from joining even after the ban is removed from the banList.
  
-- controlls --
- someone broke the key-driving rotational acceleration dampening,
  feels like 1.7 driving again.
  
- Observer movement controls seems to get locked-up in Hunt mode.
  
-- rendering --
- Zbuffer flickering with Narrow and Covered animated treads

- some ATI cards get font rendering to have variable alpha values
  on each letter. The gl restate was removed from the font manager.
  It should be put in and tied to a config option that defaults to
  off.

- do all Riva128 systems require "noMeshClusers"? Is there a 
  workaround to make vertex array work on those cards?
  
- Burrowed tank shadows should be ground clipped
  (the shadow perspective matrix messes with the clip plane?)
  
- Material properties for mesh containers are not adjusted by
  ObstacleModifier, and will not save correctly if using saveFlatFile.
 
- same stipple on teleporters and phantom zone, making phatom
   tank behind teleporter virtually invisible when blending is off.

- line stipple doesn't (can't) match polygon stipple
   messes up shadow of flag stem
   
- exploding tank parts sometimes move along the ground instead of
   flying up into the air.

-- build system --
- make maintainer-clean does not enter DIST_SUBDIRS
  so all Makefile.in and Makefile files are not removed correctly
  (this is probably a bug in automake 1.4, not in our files)

-- platform (windows) --
- not blanking screen during win32 startup
   should black out screen before changing resolutions
   should raise on top of task bar
   also black out screen when quitting until resolution restored

- error dialogs on win32 may appear off screen
   only when display resolution was changed
   
- jitter on windows servers is reported as very high, but play
  is unaffected.
  
- Windows BZFS will not let clients connect when 'too many' flags
  are specified.

   
-- platform (SDL) --
- if you start the client windowed on a multidisplay system, and then
  move the window to a secondary monitor, you cannot control the
  brightness of the (SDL) window since it presently modifying the
  gamma of the display that started it.

-- platform (X11) --

-- platform (OSX) --

-- bzfs --
- ANSI codes can be used in the server -public messages
  The best solution is probably to strip the codes at the listserver
  
- bzfs sometimes gets into a mode where CTF team flags spawn at random places,
  not on bases.  Also, players spawn at random spots after flag cap.
  
-- unsorted --

- if there is a network connection (e.g. a lan) yet no external
  access, the client hangs hard in cURLManager.cxx:291 and later in
  some odd corrupted stack space elsewhere.  this was with CURL 7.13.1
  (default Mac libcurl).  simple workaround is to invoke client with
  -list http://localhost (even if no local server is running) to avoid
  the hang on resolving.

- teleporting is blocking when going from a ground teleporter to
  a teleporter sitting on a mesh object. fix during next protocol
  breakage  (workaround by dropping the ground teleporter by a
  small amount... causing the burrow sound)

- the last shot fired with a shot-limited flag doesn't carry the flag
  type (or is dropped by the server?)...e.g. if I have G, limited to
  5 shots, and kill someone with the fifth shot, only that player dies
  because the flag was dropped by the time the kill was scored...
  even though the shot was fired while I still had the flag.

- spin inversion bug, fix in MeshTransform.cxx (around line 300)
  during the next protocol breakage

- Too many flags caused "drop, unresponsive with 16687 bytes queued"
  (+f good{40} was the breaking point, linux, local bzfs server)
  admittedly, an unreasonable number of flags

- Bad BZDB: some BZDB variables are not range checked:
  "/set _syncTime -" goes boom on the client side.
  (StateDatabase::ExpressionToken::operator=, StateDatabase.cxx:890)

- dropping a team flag, when the related team is empty, start a timeout.
  The related code does not take into account that we can have now
  multiple team flags.

- if the display cannot initialize properly, it will start bzflag with a
  black screen.  need to prevent this by either detecting if there is an
  available mode that is possible, lowering memory usage, or reporting
  an error and aborting.

- time limiter does not take jumping into consideration when holding Agility

- shooting straight shots with the Agility flag while just having accelerated
  forward (common tactic to shoot "fast shots") will miss targets that are
  rather stationary and directly in the shot's path.

- bullets now travel through the top of a block instead of reflecting off.
  The bullets appear to be half(or more) submerged into the block.

- world weapons seem to lag the server when there are many players joined.
  might be related to a rapidly repeating world weapon as well (like once
  a second, use _weapons BZDB var to test...)

- reached assertion on either World::getTeleportTarget() or
  World::getTeleporter() after getting killed while jumping towards a
  teleporter (and landing in front of the teleporter, albeit dead).  i
  didn't respawn, waited a couple sec (was chatting), then the assertion was
  raised.

- list server includes counts for players running on non-public/mis-configured
  servers on the same machine on different ports.  if server runs on port 5156
  with publicaddr set to machine:5156 and then also runs another on 59999 with
  publicaddr set to machine:5156 (by accident or otherwise), then player joins
  to the 59999 server mask the 5156 server.  it'd be easy to blow this off as
  expected behavior, but I expect one can also trojan any server's counts
  using this same technique..

- Shift+Tab seems to be bound to jump without being bound to jump
  It doesn't happen on Linux. Shift+Tab action is untranslated by XLookupString
  (xfree86 4.3), so need custom code to go into bzflag.

- Flaghelp falls into the radar area when radar is 'bigger'

- Address Exception reported when unpacking a FlagType in MsgFlagUpdate on
  client in Rabbit game. The reported message buffer address was bad (ie
  0xbfffd7ed) Could we be running off the end of the packet (ie count is
  fubar'ed?) Perhaps add sanity check for not overruning end of buffer.

- bzadmin seems to be less responsive over the network than bzflag - a
  bzadmin client can get kicked from a very active game by the server
  for causing it to queue too many packages (there's a limit at 20kB, when I
  removed it the queue went up to at least 64kB)

- not dropping a flag grabbed just before being destroyed

- can sometimes appear in front of bad guys

---
see the bug tracker on SourceForge for more
http://SourceForge.net/tracker/?group_id=3248&atid=103248
