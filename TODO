to do list for bzflag
---------------------

* encapsulate stuff requiring platform #ifdef's:
   networking API into libNet.a.
   fork/exec (used in menus.cxx) into libPlatform.a
   file system stuff (dir delimiter, etc.)
   user name stuff

* windows makefiles
   currently have microsoft visual c++ projects only

* auto-generated dependency support in makefiles
   manual dependencies cause too much trouble

* smarter robots

* add type of shot (normal, gm, sw, etc) to killed message

* more flag types

* mines:
   not necessarily a good idea.  if mines are visible
   then they're fairly useless.  if invisible then they're
   not fun because you're destroyed without warning and
   no amount of skill will help you.  someone suggested
   making them visible within a certain range.  another
   possibility is damage before destruction.

* improve non-multicast communication:
   currently falls back to TCP relay through server.
   better would be UDP relay through server because we
   don't need TCP's reliability for player packets.

* radio chat:
   allow players to communicate via low-quality audio.
   already some support built into the server for this.

* pre-game waiting room:
   provide a means for players to gather before and after
   a game.  basic text chat facilities.  allows players
   to wait for enough players for a game and to discuss
   strategy, etc.  could build this into bzfs easily.

