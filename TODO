to do / idea list for bzflag
----------------------------

* new UDP-only network code:
   Use a single port only; provide better lag statistics
   (latency and jitter). Should pack several small messages into
   one UDP packet to reduce header overhead. For clients with
   low bandwidth, an automatic throttling of bulk messages could
   reduce lag.

* flag negotiation at connect
   Server tells the client exactly what flags are going to appear,
   thus allowing flag changes in minor version updates (if the
   server uses flags that the client doesn't, kill)

* player database in bzfls:
   The idea is to allow players to register their callsign. 
   Whoever want to use that callsign has to authenticate himself
   (implemented by a simple public key scheme). Furthermore, a
   karma system, where each player can rate another player.
   'Nice' players should get high karma value this way, whereas
   cheaters get bad karma. Servers can be set up to require a minum
   karma level.

* client-side world cache to speed up joining;
   could be based on MD5 hashes (+ size?)

* split bzfs.cxx into several files, make bzfs more modular 

* server should probably track approx. player position;
   can detect some cheats this way; server knows where to drop
   flag when client crashes

* add ability to change server settings at runtime,
   e.g. switch flags on/off

* get rid of hardcoded game parameters, most importantly
   WorldSize, but most others in src/game/global.h should also
   be specified by the server.

* encourage server admins to provide an email contact by adding
   an option to bzfs

* windows makefiles
   currently have microsoft visual c++ projects only

* create robots as separate binaries and allow either the
   client or server to exec them. Have a server option
   to keep n players in the game which auto spawns/kills enough
   bots to do it. Bot player type is just a bit. bots get all
   message types.

* smart robots
  robot API - libbzflag anyone?

* change basic server config to a file
   more complicated server options
   allow overrides with --option=value

* real collision detection

* new enhanced worlds
   downloadable textures, sounds, etc

* add type of shot (normal, gm, sw, etc) to killed message

* more flag types

* mines:
   not necessarily a good idea.  if mines are visible
   then they're fairly useless.  if invisible then they're
   not fun because you're destroyed without warning and
   no amount of skill will help you.  someone suggested
   making them visible within a certain range.  another
   possibility is damage before destruction.

* pre-game waiting room:
   provide a means for players to gather before and after
   a game.  basic text chat facilities.  allows players
   to wait for enough players for a game and to discuss
   strategy, etc. Would also be useful for timed matches, e.g.
   in a tournament.

* inter-server teleporters:
   lead from one server to another. If the other end exists,
   exit from that portal. If not, do a normal game join.

* spectator mode. Possibly only through a relay server
  so as to not load down the normal server.
