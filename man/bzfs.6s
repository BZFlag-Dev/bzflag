.\" bzflag
.\" Copyright (c) 1993 - 2005 Tim Riker
.\"
.\" This package is free software;  you can redistribute it and/or
.\" modify it under the terms of the license found in the file
.\" named COPYING that should have accompanied this file.
.\"
.\" THIS PACKAGE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
.\" WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR A PARTICULAR PURPOSE.

.TH bzfs 6 BUILD_DATE bzfs-BUILD_VERSION BZFlag
.SH NAME
bzfs \- BZFlag game server
.SH SYNOPSIS
.B bzfs
[\fB\-a \fIvelocity\fR \fIrotation\fR]
[\fB\-admsg \fImessage\fR]
[\fB\-autoTeam\fR]
[\fB\-b\fR]
[\fB\-badwords \fIbadwordfile\fR]
[\fB\-ban \fIip\fR{,ip}*]
[\fB\-ban \fIip\fR[\fI,ip\fR]...]
[\fB\-banfile \fIfilename\fR]
[\fB\-c\fR]
[\fB\-cache \fIworldCacheURL\fR]
[\fB\-cacheout \fIfilename\fR]
[\fB\-conf \fIconfigfile\fR]
[\fB\-cr]
[\fB\-d\fR]
[\fB\-density \fR\fInum\fR]
[\fB\-disableBots\fR]
[\fB\+f \fR{\fIgood\fR|\fIbad\fR|\fIteam|\fR|\fIflag-id\fR}[\fI{count}\fR]]
[\fB\-f \fR{\fIgood\fR|\fIbad\fR|\fIflag-id\fR}]
[\fB\-fb\fR]
[\fB\-filterCallsigns\fR]
[\fB\-filterChat\fR]
[\fB\-filterSimple\fR]
[\fB\-g\fR]
[\fB\-groupdb \fIfile\fR]
[\fB\-h\fR]
[\fB\-handicap\fR]
[\fB\-help\fR]
[\fB\-helpmsg \fIfile\fR \fIname\fR]
[\fB\-i \fIinterface\fR]
[\fB\-j\fR]
[\fB\-lagdrop \fIwarn-count\fR]
[\fB\-lagwarn \fR\fItime/ms\fR]
[\fB\-masterBanURL \fR\URL/s\fR]
[\fB\-maxidle \fR\fItime/s\fR]
[\fB\-mp \fR{\fIcount\fR|[\fIrogue-count\fR]\fB,\fR[\fIred-count\fR]\fB,\fR[\fIgreen-count\fR]\fB,\fR[\fIblue-count\fR]\fB,\fR[\fIpurple-count\fR],\fR[\fIobserver-count\fR]}]
[\fB\-mps \fR{\fImax-score\fR}]
[\fB\-ms \fIshots\fR]
[\fB\-mts \fR{\fImax-score\fR}]
[\fB\-noMasterBanList\fR]
[\fB\-p \fIport\fR]
[\fB\-passdb \fIfile\fR]
[\fB\-passwd \fIpassword\fR]
[\fB\-pidfile \fIfilename\fR]
[\fB\-poll \fIvariable=value\fR]
[\fB\-printscore\fR]
[\fB\-public \fIdescription\fR]
[\fB\-publicaddr \fIaddress\fR[\fI:port\fR]]
[\fB\-publiclist \fIurl\fR]
[\fB\-q\fR]
[\fB\+r\fR]
[\fB\-rabbit [\fBscore\fR|\fBkiller\fR|\fBrandom\fR]]
[\fB\-recbuf \fIsize\fR]
[\fB\-recdir \fIdirectory\fR]
[\fB\-replay\fR]
[\fB\-reportfile \fIfilename\fR]
[\fB\-reportpipe \fIcommand\fR]
[\fB\-requireudp\fR]
[\fB\+s \fIflag-count\fR]
[\fB\-s \fIflag-count\fR]
[\fB\-sa\fR]
[\fB\-sb\fR]
[\fB\-set \fIname value\fR]
[\fB\-sl \fIid num\fR]
[\fB\-spamtime \fItime\fR]
[\fB\-spamwarn \fIwarnLimit\fR]
[\fB\-speedtol \fIfactor\fR]
[\fB\-srvmsg \fImessage\fR]
[\fB\-st \fItime\fR]
[\fB\-sw \fIcount\fR]
[\fB\-synctime\fR]
[\fB\-t\fR]
[\fB\-tftimeout \fItime-limit\fR]
[\fB\-time \fItime-limit\fR]
[\fB\-timemanual\fR]
[\fB\-tk\fR]
[\fB\-tkkr \fIpercent\fR]
[\fB\-userdb \fIfile\fR]
[\fB\-vars \fIfile\fR]
[\fB\-version\fR]
[\fB\-world \fIworld-file\fR]
[\fB\-worldsize \fIworld size\fR]

.SH DESCRIPTION
\fBBzfs\fR is the server for \fBBZFlag\fR,
and it must be running to play.  It can be run on any system on the
network (including a player's system or one without graphics).
Terminating the server terminates the game in progress.

.SH OPTIONS
.TP 15
\fB-a \fIvelocity rotation\fR
Enables inertia and sets the maximum linear and angular accelerations.
The units are somewhat arbitrary so you'll have to experiment to find
suitable values.  The values must be non-negative and higher values
yield greater inertia.
.TP 15
\fB\-admsg \fImessage\fR
Define a message which will be broadcast to all players every 15 minutes.
This option can be used multiple times to define a multiline message.
.TP
.B -autoTeam
Automatically assign players to teams when they connect so that there
are an equal number of players on all available teams.  Players are
placed on teams that have the fewest players; otherwise they will be
placed on the weakest team.  Weakest team is the team with the lowest
combined kill ratio.
.TP
.B -b
When \fB-c\fR is supplied, this option randomly rotates the buildings.
.TP
\fB\-badwords \fIbadwordfile\fR
Specify a file that contains bad words that will be used when either
\fB-filterCallsigns\fR or \fB-filterChat\fR is enabled.
.TP
.B -ban \fIip\fR{,ip}*
Prohibits connections from the listed IP addresses. Trailing 255 bytes are
treated as mask bytes.
.TP
\fB\-banfile \fIfilename\fR
Specifies the name of a file where bzfs will store the banlist. It will
load the banlist from this file when it starts (if the file exists),
and write the banlist back to the file when someone gets banned or unbanned.
If this option isn't given the banlist will not be saved.
.TP
.B -c
Enables the capture-the-flag style game. By default this allocates one team flag per team.
This can be modified see +f team. By default, the free-for-all style is used.
.TP
\fB\-cache \fIworldCacheURL\fR
Specifies the URL for the world cache file. This is a binary file that clients
will attempt to download before getting the world from the bzfs server.
.TP
\fB\-cacheout \fIfilename\fR
Save the currently specified world into a binary cache file and exit.
.TP
\fB\-conf \fIconfigfilename\fR
Specifies the name of a configuration file to be used to set all of the
bzfs options, rather than setting them on the command line.
.TP
.B -cr\fR
Enables the capture-the-flag style game with random map.  You can
optionally specify a building density by providing a number (default
is 5).  One team flag per team is provided, but more can be added thru +f team.
By default, the free-for-all style is used.
.TP
.B -d
Increase debugging level. If more -d is given, more debugging info is obtained.
.TP
\fB-density \fR\fInum\fR
Specify density for buildings, i.e. the higher the integer number, the more
buildings you will get. This applies to automatically generated maps only.
.TP
.B -disableBots
Disallow clients from using the ROGER autopilot or from using robots.
.TP
\fB+f\fR {\fIgood\fR|\fIbad\fR|\fIteam\fR\fIflag-id\fR}[\fI{count}\fR]
Forces the existence of the given flag.  If specified multiple times
for the same \fIflag-id\fR, then that many flags will appear.  The
\fIgood\fR argument is equivalent to specifying \fB+f\fR once for
each kind of good flag. Same goes for the \fIbad\fR argument.  The
\fIteam\fR argument adds a team flag to each team,
assuming that the game style is capture the flag. The optional
\fI{count}\fR parameter allows the specification of multiple flags of the
same type. Note that the curly braces are required.
.TP
\fB-f\fR {\fIgood\fR|\fIbad\fR|\fIflag-id\fR}
Disallows random flags of the given type.  Required flags given by the
\fB+f\fR option are still provided.  The \fIbad\fR argument is equivalent
to specifying \fB-f\fR once for each kind of bad flag.  Same goes for
\fBgood\fR, but you probably do not want to do that.
.TP
An example of running a server with 40 to 50 flags except genocide would
be "+s40 -s50 -f G".  Similarly, "+f good{40} +f bad{10} -f G{40}" would
give you exactly 40 good flags except genocide and 10 of each bad flag.
.TP
.B -fb
Allow flags on box buildings.
.TP
.B -filterCallsigns
Turn on the filtering of callsigns and email addresses.  Callsigns and
addresses are compared against bad words provided via \fB-badwords\fR.
.TP
.B -filterChat
Turn on the filtering of chat messages.  Messages have words provided via
a \fB-badwords\fR file are replaced with !@#$%^&* characters.
.TP
.B -filterSimple
By default, all filtering is aggressive, matching much more than what is
strictly listed in a \fB-badwords\fR file for convenience.  Providing
this option will make the \fB-filterCallsigns\fR and \fB-filterChat\fR
comparisons exact match only.
.TP
.B -g
Quit after serving one game.
.TP
\fB-groupdb \fIfile\fR
Load groups from file
.TP
.B -h
Buildings are given random heights.
.TP
.B -handicap
Players are given a handicap advantage based on their ability in
relation to the other players. Handicapped players will have faster
tanks and shots. The handicap is determined by the player's score in
relation to other players.
.TP
.B -help
Shows a help page and lists all the valid flag id's.
.TP
\fB-helpmsg \fIfile\fR \fIname\fR
Create a help message accessible by /help name, which prints the contents
of file. Restricted to 10 lines per help message.
.TP
\fB-i \fIinterface\fR
Server will listen for and respond to ``pings'' (sent via broadcast)
on the given interface.  Clients use this to find active servers on the
network. This is the TCP/UDP/IP address the server will listen on.
.TP
.B -j
Allows jumping.
.TP
\fB\-lagdrop \fIwarn-count\fR
Kicks players after \fIwarn-count\fR lag warnings.
.TP
\fB-lagwarn \fItime/ms\fR
Send warnings to players that lag more than \fItime\fR.
.TP
\fB-masterBanURL \fIURL/s\fR
Specify alternate URLs for the master ban file to be pulled from.
This argument may be provided multiple times.
.TP
\fB-maxidle \fItime/s\fR
Kick players that did not play longer than time seconds. Pausing players are
not kicked. If a player uttered a word recently, he will be kicked after
thrice the given time.
.TP
\fB-mp\fR {\fIcount\fR|[\fIrogue\fR]\fB,\fR[\fIred\fR]\fB,\fR[\fIgreen\fR]\fB,\fR[\fIblue\fR]\fB,\fR[\fIpurple\fR],\fR[\fIobserver\fR]}
Sets the maximum number of players, total or per team.  A single value sets
the total number of players allowed.  Five comma separated values set the
maximum for each team.  If a count is left blank then no limit is set for
that team, except for the limit on the total number of players.  Both forms
may be provided.
.TP
\fB\-mps \fImax-score\fR
Sets a maximum score for individual players.  The first player to reach
this score is declared the winner and the game is over.
.TP
\fB-ms \fIshots\fR
Allows up to \fIshots\fR simultaneous shots for each player.
This is 1 by default.
.TP
\fB\-mts \fImax-score\fR
Sets a maximum score for teams.  The first team to reach this score is
declared the winner and the game is over.
.TP
.B -noMasterBanList
Forces the server to not attempt to load the master ban list from the internet.
.TP
\fB-p \fIport\fR
Listen for game connections on \fIport\fR instead of the default port.
Use \fB-help\fR to print the default port, or use \fB-d\fR debug printing.
.TP
\fB-passdb \fIfile\fR
Load passwords from file
.TP
\fB-passwd \fIpassword\fR
Specify a server administrator password for use in remote administration
such as /kick messages.
.TP
\fB-pidfile \fIfilename\fR
Specify a file where the server will write its process ID so it may be used for
remote administration.
.TP
\fB-poll \fIvariable=value\fR
Configure several aspects of the in-game polling system
.RS
.TP
\fBbanTime\fR
number of minutes player should be banned (default is 300)
.TP
\fBvetoTime\fR
max seconds authorized user has to abort poll (default is 20)
.TP
\fBvotePercentage\fR
percentage of players required to affirm a poll (default is 50.1%)
.TP
\fBvoteRepeatTime\fR
minimum seconds required before a player may request
another vote (default is 300)
.TP
\fBvotesRequired\fR
minimum number of additional votes required to make a
vote valid (default is 2)
.TP
\fBvoteTime\fR
maximum amount of time player has to vote, in seconds (default is 60)
.RE
.TP
.B -printscore
Write score to stdout whenever it changes
.TP
\fB-public \fIdescription\fR
Advertise this server on the internet with the given \fIdescription\fR.
By default, a server will respond to broadcast queries, allowing clients
to find servers running on the standard port on the local subnet.
The \fB-public\fR option causes the server to register itself with
a list server, which clients can query to get a list of \fBbzfs\fR servers.
.TP
\fB-publicaddr \fIaddress\fR[:\fIport\fR]
Advertise this server with the given \fIaddress\fR and \fIport\fR.
Only has an effect when used with \fB-public\fR.
Normally a server advertises itself at the local address and port.
Some servers are not accessible from the internet at this address
(for example servers behind a firewall using Network Address
Translation).  Use this option to specify the address and/or port
that internet users should use to access this server.
.TP
\fB-publiclist \fIurl\fR
Advertise this server on the list servers listed at \fIurl\fR.
Only has an effect when used with \fB-public\fR.
A built-in url is used by default.  The \fBBZFlag\fR clients use the
same built-in url so, by default, clients will see public servers
automatically.  This argument may be provided multiple times to
publicize a server to multiple list servers.
.TP
.B -q
If specified, the server will not listen for nor respond to ``pings''.
\fBBZFlag\fR sends out these pings to give the user a list of
available servers.  This effectively makes the server private,
especially if the \fB-p\fR option is also used.
.TP
.B +r
Makes most shots ricochet.
Super bullets, shock waves, and guided missiles do not.
.TP
\fB-rabbit\fR [\fIscore\fR|\fIkiller\fR|\fIrandom\fR]
Enables the rabbit-hunt style game.  By default, the free-for-all
style is used.  You must specify the algorithm used to pick a new
rabbit when the old one dies.  The \fIscore\fR algorithm uses a modified
wins/(wins+losses) score and picks the top scoring player to be the new
rabbit.  The \fIkiller\fR algorithm specifies a reverse tag game where
whomever kills the rabbit becomes the new rabbit.  The \fIrandom\fR
algorithm randomly picks a new rabbit without regard to score.  (The
\fIscore\fR algorithm is the original behavior.)
.TP
.B -recbuf \fIsize\fR
Start with the recording buffer active, with the specified size (in megabytes).
.TP
.B -recdir \fIdirectory\fR
Specify the directory for record and replay files.
.TP
.B -replay
Start the server in replay mode.
.TP
.B -reportfile \fIfilename\fR
Write messages to the server admin written using the \fB/report\fR command to
this file. If neither \fB-reportfile\fR or \fB-reportpipe\fR is used the
\fB/report\fR command will be disabled.
.TP
.B -reportpipe \fIcommand\fR
Pipe messages to the server admin written using the \fB/report\fR command to
this program or shell command. See \fB-reportfile\fR.
.TP
.B -requireudp
Require clients to use parallel UDP. If players fire before opening a
UDP channel, kick them off the server.
.TP
\fB+s \fInum-flags\fR
The server will have an extra \fInum-flags\fR random super flags available
at all times.  The \fB-f\fR option can be used to restrict which types of
flags will be added.  Required flags given by the \fB+f\fR option are not
included in the \fInum-flags\fR total.
.TP
\fB-s \fInum-flags\fR
The server will have up to \fInum-flags\fR random super flags available at
any time.  The \fB-f\fR option can be used to restrict which types of flags
will be added.  Required flags given by the \fB+f\fR option are not included
in the \fInum-flags\fR total.
.TP
.B -sa
Antidote flags are provided for players with bad flags.
.TP
.B -sb
Allow spawns on box buildings.
.TP
.B -set \fIname value\fR
Set BZDB variable \fIname\fR to \fIvalue\fR
.TP
\fB-sl \fIid num\fR
Restrict flag \fIid\fR to \fInum\fR shots.
.TP
\fB\-spamtime \fItime\fR
Make <time> be the required time in seconds between messages sent that are alike.
.TP
\fB\-spamwarn \fIwarnLimit\fR
Warn a spammer that sends messages before -spamtime times out <warnLimit> many times.
.TP
\fB\-speedtol \fIfactor\fR
Override the default speed auto kick factor. The factor should not be less then 1.0. The factor is a multiplier.
.TP
\fB\-srvmsg \fImessage\fR
Define a server welcome message. This option can be used multiple times
to define a multiline message.
.TP
\fB-st \fItime\fR
Bad flags are automatically dropped after \fItime\fR seconds.
.TP
\fB-sw \fIcount\fR
Bad flags are automatically dropped after \fIcount\fR wins.  Capturing
a team flag does not count as a win.
.TP
.B -synctime
Forces all clients to use the same time of day.  The current time is
determined by the server's clock.  This disables the + and - keys on
the clients.
.TP
.B -t
Adds teleporters to the game.
.TP
\fB\-tftimeout \fItime-limit\fR
If the last player in a team leaves while someone else is carrying the team
flag, the team flag will not reset until it is captured, or until the player
drops it and it is left alone for some time. This option specifies the number
of seconds that the flag should be left alone before it is reset. The
default value is 30.
.TP
\fB\-time \fItime-limit\fR
Sets a time limit on the game to \fItime-limit\fR.  The game will be
stopped \fItime-limit\fR seconds after the first player connects.
.TP
\fB\-timemanual\fR
When using \fB-time\fR, the countdown will start when the first player
joins. With \fB-timemanual\fR, the countdown has to be started manually
using the \fI/countdown\fR command. This is useful for matches.
.TP
.B -tk
Changes the default behavior where a player dies when he kills a teammate.
When using this option, he will just get a -1 score penalty for the kill but
stay alive.
.TP
\fB-tkkr \fIpercent\fR
Kicks players whose team killing to normal kill ratio is greater than
\fIpercent\fR [1-100]. A start up grace period is given to players.
.TP
\fB-userdb \fIfile\fR
Load group associations from file
.TP
\fB-vars \fIfile\fR
Loads values for game configurable variables from \fIfile\fR. Entries are
one per line in the form: \fBset variable value\fR. For a list of variables
that are configurable, in the BZFlag client, send a message with
\fI/set\fR as the text.
.TP
.B -version
Prints the version number of the executable.
.TP
\fB-world \fIworld-file\fR
Reads a specific BZFlag \fB.bzw\fR world layout file for the game map.
.TP
\fB-worldsize \fIworld-size\fR
Changes the size for random maps
.RE
.SS Notes
The server uses nearly zero CPU time when nobody is playing, and even
during a game the server uses very little CPU, so it's not a burden on
the system to leave one running and it won't interfere with a player
using the same system (except on Windows 95, which \fIreally\fR
sucks at multitasking).  The server will continue to run until
terminated.  If a game is in progress when the server goes down,
all players will be kicked off and the game will be aborted without
warning.  The server resets itself when all players have quit.  All
players must quit to reset the server when a game is over (because of
a score or time limit).
.PP
The following game styles are recommended starting points.
.RS
.TP 15
\fB-c\fR [\fB-b\fR]
Basic capture-the-flag game.  It teaches teamwork and dogfighting skills.
.TP
\fB-s -t\fR
Free-for-all with superflags and teleporters.  Teaches players how to use
superflags and teleporters for maximum effect.  You may want to allow
players to drop bad flags with any of -sa, -st, and -sw.
.RE
.PP
Notice that the maximum number of shots for these styles is one.  Having
only one shot greatly increases playability and learning speed.  Multiple
shots decrease the required skill level and make it virtually impossible
for even a skilled player to avoid getting shot for any length of time.
More experienced players will still dominate the game, but beginners will
have an easier time making kills.
.SS Networking
Communication between the server and clients (i.e. between \fBbzfs\fR and
\fBbzflag\fR) during a game is via TCP and UDP.  Use the \fB-help\fR option
to get
the server's default port.  If there's a firewall between the server and
client, the firewall must accept connections from the client to this port
and forward them to the server.
.PP
Clients can search for servers by sending broadcast UDP
packets.  But they must be on the same local area network for this to work.
Clients can also find servers
advertised using \fI-public\fR by querying list servers.
.PP
Game information is relayed through the server. Some communication between
clients, such as position and orientation information, is normally sent via UDP
packets.  Other data, like flag grab and kill messages, are sent to the server
via TCP. The server then turns around and broadcasts these packets  to all
players. Since being in a game implies connection to the server, all players
are guaranteed to get all messages sent via TCP.  But the UDP
packets may be discarded.  If other players can see your tank in the game but
it never appears to move and shots go through it, chances are high that your
UDP connection is not working.

.SH GENERAL SERVER COMMANDS

.TP
.br
.B /lagstats
Lists network delays, jitter and number of lost resp. out of order packets by player. Example:
.ft CW
.nf
.ne 3
MrApathyCream 335 +- 10ms
Gerbol 210 +- 3ms
captain_macgyver 155 +- 0ms  12% lost/ooo
.ft R

.TP
.B /idlestats
Displays the idle time in seconds for each player. A player is idle when
he is dead and has not respawned yet.

.ft CW
.nf
.ne 3
MrApathyCream: 0s
Gerbol: 80s
captain_macgyver: 13s
.ft R

.TP
.B /flaghistory
Lists what flags players have grabbed in the past. Example:
.ft CW
.nf
.ne 3
MrApathyCream: (<-) (->) (O) (CB) (M) (B) (JM) (WA)
Gerbol: (L) (GM) (L) (GM) (CL) (ST) (GM) (L)
captain_macgyver: (SB) (SW)
.ft R

.TP
.B /time, /date
Responds with the current server local time. /date and /time are the exact same. Example:
.ft CW
.nf
.ne 1
Tuesday September 08 06:45:54 2004
.ft R

.TP
.B /uptime
Prints server's current running time in days, hours, mins and secs.
.ft R

.TP
.B /password {password}
Attempt to gain administrator status Example:
.ft CW
.nf
.ne 2
/password supersecretpassword
You are now an administrator!
.ft R

.TP
.B /clientquery [callsign]
Retrieve client version info from all users, or just CALLSIGN if given Example:
.ft CW
.nf
.ne 2
/clientquery MrApathyCream
MrApathyCream: Version: BZFlag 1.11.6-20040729-gnu-linux-SDL
.ft R

.TP
.B /report {message}
Write a message to the server administrator. Example:
.ft CW
.nf
.ne 1
/report I like this map!
.ft R

.TP
.B /part {message}
Leave the server with a goodbye message (similar to IRC's /part)
.ft CW
.nf
.ne 2
/part Gotta go! bye everyone!
.ft R

.TP
.B /quit {message}
Quit the game with a goodbye message (similar to IRC's /quit)
.ft CW
.nf
.ne 2
/quit Gotta go! bye everyone!
.ft R

.TP
.B /me

This command displays an "action" that is conveyed to another player.  It allows
for a little more expressivity in the game.  For example: "/me is hunting wabbits"
turns into a message like "TimRiker is hunting wabbits" that gets displayed
differently to other players.

.TP
.B /msg "some player" some message

This command allows a player to send a message to another player.  Similar to using
the "," and "." message keys in the game and then selecting your recipient, this
will send some message to particular player.  The quotes are optional.


.SH SERVER ADMINISTRATIVE COMMANDS

.BR
.TP
.B /viewreports
View the server's report file.
.BR

.TP
.B /record list
List all files in the recordings directory
.TP
.B /record start
Start recording into the memory buffer
.TP
.B /record stop
Stop recording into the memory buffer
.TP
.B /record size <megabytes>
Set the size of the recording memory buffer
.TP
.B /record rate <seconds>
Set the time between game state updates stored in the recording. This will affect
the granularity of the 'skips' you can do while replaying a file. It will also
make the recording files bigger if it is set to a faster update rate.
.TP
.B /record stats
Display the statistics for the current recording (file or buffered)
.TP
.B /record file <filename>
Start recording directly to a file
.TP
.B /record save <filename> [seconds]
Save the recording buffer into a file. If seconds is specified, then only save
that many previous seconds into the file.
.BR

.TP
.B /replay list
List all files in the recordings directory
.TP
.B /replay load <filename>
Load the specified recording file
.TP
.B /replay play
Start playing the recording. This will oftentimes require that all players connected
to the server rejoin  (to reload the map, etc...)
.TP
.B /replay skip [+/- seconds]
If seconds is specified, then skip that amount of time in the recording.
Otherwise, skip forwards until there is activity.
.BR

.TP
.B /shutdownserver
Stop serving BZFlag on this server
.TP
.B /superkill
Kick all players off the server
.TP
.B /gameover
Ends the current game
.TP
.B /flag reset {unused}
Repositions flags. If unused is specified, flags carried by tanks are not affected.
.TP
.B /flag up
Removes all flags from the game
.TP
.B /flag show
Shows all flags with information. Example:
.ft CW
.nf
.ne 2
0: p:-1 r:1 g:1 1:V s:1 p:159.1x43.2x0.0
1: p:2 r:1 g:1 1:SW s:1 p:209.1x143.2x10.0
2: p:-1 r:1 g:3 1:L s:1 p:-29.1x301.2x0.0

.BR
.TP
.B /kick {playerName}
Kick a named player off the server. Example:
.ft CW
.nf
.ne 2
/kick Gerbol
You were kicked off the server by MrApathyCream
.ft R

.TP
.B /playerlist
List player names and IP addresses. Example:
.ft CW
.nf
.ne 4
/playerlist
[0]MrApathyCream: 35.23.65.44:4808 udp id
[1]Gerbol: 130.123.1.55:4909 udp id
[2]captain_macgyver: 15.32.122.51:3201 udp id
.ft R

.TP
.B /ban {ipList} {duration} {reason}

Ban players using the specified IPs for certain length of time from using this server. Example:
.ft CW
.nf
.ne 4
/ban 35.23.43.66 2 cheating
bans player with specific ip for 2 minutes
/ban 35.23.*.*,47.23.17.*
bans all ips in this range forever
/ban 36.37.2.8 2h30m "ShootMe" was abusing players
bans specific ip for 2.5 hours with given reason
.ft R

.TP
.B /banlist
List all of the IPs currently banned from this server. Example:
.ft CW
.nf
.ne 5
/banlist
IP Ban List
------------
35.23.43.66
47.23.17.*
.ft R

.TP
.B /hostban {hostpat} {duration} {reason}

Ban players using the specified hostnames for a certain length of time from using this server.  Example:

.ft CW
.nf
.ne 4
/hostban *.foo.com 2 cheating
bans all players from foo.com for 2 minutes
.ft R

Note: Bzfs must be compiled to use the ADNS asynchronous resolver library in order for this feature to work.

.TP
.B /hostbanlist
List all of the host patterns currently banned from this server.
.TP
.B /say {message}
Generate a public message sent by the server. Example:

.ft CW
.nf
.ne 4
/say This is a servermessage
.ft R

.TP
.B /countdown [seconds]
Starts the countdown sequence for a timed game.  The countdown
sequence length can optionally be specified in seconds.  Examples:

/countdown
/countdown 3

.TP
.B /lagwarn

Dynamic change the maximum allowed lag time. Example:

/lagwarn 300

.SH USER MANAGEMENT

Generally, you start with empty files for the user and password
databases.  These are maintained by the server, and modifiable through
server commands.  Users in turn belong to groups.  Groups are
generally customized to perhaps allow administrative control to
trusted users.

There are both local and global groups, i.e. groups that are available
across the entire BZFlag network.  In setting up a server, you may
want to specify global groups that will allow already well known and
trusted users to police your server and help maintain control against
cheaters and abuse.

A group database file is set up to contain the specific local and
global groups you care to have on your server and exactly what
permissions are granted by each.  These files are laid out with one
line per group, using the following format:

GROUP_NAME: perm1 perm2 perm3 ... permN

Group names cannot have spaces, quotes, or other special characters in
them.  This would be a sample line defining a "cop" group:

COPS:KICK BAN BANLIST UNBAN INFO

To distinguish between a group that is local and one that is global,
use the "LOCAL." prefix as part of the group name, e.g.:

LOCAL.OPERATOR: BANLIST

The server will automatically create three groups if they are not
specified in the groups file: EVERYONE, VERIFIED, and LOCAL.ADMIN.  The
LOCAL.ADMIN group has almost every permission possible (similar to
granting admin powers via /password).  VERIFIED presently allows
access to the voting system's /poll and /vote commands.  EVERYONE
allows /lagstats, /idlestats, /flaghistory, /date, /msg, /me, and
/report.

Once the server is running, users can register their callsigns and
admins can set their group memberships. Users can use any command that
their permissions allow. Every user, registered or not, is part of the
EVERYONE group. When a user identifies, they become part of the
VERIFIED group.

In addition, there are global groups available that persist
network-wide.  Users that register their callsigns on the BZFlag
website at http://my.BZFlag.org/bb/ have the ability to globally
authenticate by providing a password from within the client.  When
they authenticate, bzfs will ask the list server if they belong to any
of the groups listed in your group database file that are not prefixed
with "LOCAL.".  If they are a member of a group in question, then they
are granted the permissions you specify for that group.

The available permissions are as follows:

.\" Use one tab between permission and description
.ta 2i T .5i

IDLESTATS	/idlestats
.br
LAGSTATS	/lagstats
.br
FLAGMOD	/flag
.br
FLAGHISTORY	/flaghistory
.br
LAGWARN	/lagwarn
.br
KICK	/kick
.br
BAN	/ban /hostban
.br
BANLIST	/banlist /hostbanlist
.br
UNBAN	/unban /hostunban
.br
COUNTDOWN	/countdown
.br
ENDGAME	/endgame
.br
SETVAR	/set /reset
.br
SHUTDOWNSERVER	/shutdownserver
.br
SUPERKILL	/superkill
.br
PLAYERLIST	/playerlist
.br
INFO	not implemented
.br
LISTPERMS	not implemented
.br
SHOWOTHERS	not implemented
.br
REJOIN	allows instant rejoin, regardless of _rejoinTime
.br
REMOVEPERMS	/removegroup
.br
SAY	/say
.br
SETPERMS	/setgroup
.br
SETALL	use of all set/remove commands
.br
SETPASSWORD	not implemented
.br
POLL	/poll ban|kick
.br
VOTE	/vote
.br
VETO	/veto
.br
REQUIREIDENTIFY	user must /identify when using this locally registered callsign
.br
PRIVATEMESSAGE	/msg
.br
ACTIONMESSAGE	/me
.br
ADMINMESSAGESEND	player may send messages on the admin channel
.br
ADMINMESSAGERECEIVE	player receives messages sent to admin channel

.TP
.B /register {password}

Register your current callsign to the specified password. Passwords
must be at least 3 characters long, and the callsign may not contain
quotes or other non-alphanumeric/space characters

.TP
.B /identify {password}

Log in to a registered callsign

.TP
.B /setpass {password}

Changes your password

.TP
.B /ghost {callsign} {password}

Kicks off an impersonating player or ghost

.TP
.B /grouplist

Lists the available user groups

.TP
.B /groupperms

Lists the permissions for each group

.TP
.B /showgroup {callsign}

Lists the groups that a registered user is a member of

.TP
.B /setgroup {callsign} {group}

Add a user to a group

.TP
.B /removegroup {callsign} {group}

Remove a user from a group

.TP
.B /reload

Reloads the user, group, and password files (for synchronization between
multiple servers on the same machine)

.TP
.B /deregister [callsign]

With an argument, it deregisters another user's callsign. Without, it
removes your own registration.

.TP
.B /poll ban|kick|vote|veto [...]

Interact and make requests of the bzflag voting system via the /poll command.
The ban and kick subcommands request a vote to respectively ban or kick some
player.  The playername is expected as the next argument.  The vote and veto
commands behave identical to the /vote and /veto command counterparts,
expecting the same arguments in following.  By default, you must be registered
to request and vote on a poll.

.TP
.B /vote yes|no

If there is a poll active, this command will place a vote in favor or in
opposition to the poll.  Multiple languages are supported as a vote argument
in addition to "yes" and "no".  By default, you must be registered to vote on
a poll.

.TP
.B /veto

If there is a poll active, this will cancel the poll.  By default, you must be
an admin to veto a poll.

.TP
.B /masterbanreload

Forces the server to flush any bans from the master server, and reload bans from the
the internet. Local bans are unaffected. This command requires the UNBAN permision.

.TP
.B /masterbanflush

Forces the server to flush any bans from the master server, efectly removing them.
Local bans are unaffected. This command requires the UNBAN permision.

.SH Worlds

BZFlag worlds come in two varieties, randomly generated ones, and
human designed ones. By default, bzfs uses randomly generated world
unless you specify the -world command line or configuration file
option. The world file specified by the -world option is a text based
file that contains a list of world objects. This file can be created
using programs found on sourceforge.net through cvs, or can be hand
edited.  See the bzw(5) manual page for more details.

.SH SEE ALSO
bzflag(6), bzadmin(6), bzw(5)
