README for Win32 platforms
--------------------------

BZFlag uses Microsoft Visual C++ for its prebuilt binary 
releases (version 7.1 aka ".NET 2003"). Project files 
are also provided for Visual C++ 8.0 which are also 
useable by the free "visual C++ .net 2005 express edition".
Visual Studio 6.0 support has been discontinued.
It is also possible to build on Win32 using MinGW/MSYS or
Cygwin, both of which use a unix-like make file system; 
for details, see README.MINGW32 (for MinGW)or the main 
README (for Cygwin).
There is a Dev-C++ project available as well. Please see
the README.DEVC++ for more info.

So, to build bzflag on Win32, get Visual C++ or something
that can read Visual C++ projects and workspaces.  Then:

Configure your executables in the Tools/Options/Directory menu.
Click the Executables tab, and add the directory where the NSIS
installer builder is found.

You also need to have libCurl installed.
Download it from http://curl.haxx.se/libcurl/
It is best if you do not get the SSL versions. Bzflag does not
need or use SSL, and the SSL versions of libCurl have additional
library dependencies that need to be meet.
Add the include directory and the lib to your visual c++
configuration.  See the SDL section at the end of the file for
details.

If you wish to build bzAdmin you may also want to get PDCurses.

The installer is the bzflag executable in the dist folder.

The instructions for building with Dev-C++ are enclosed in README.DEVC++

If you are using Visual C++ 2005 EXPRESS edition, you will need to install
a number of extra things before you can build. BZFlag will not build with 
VC express editions "out of the box".
Also note that the VC8 project does not have the same setup as the VC7.1 does
since it is not used for binaries. It will not convert the man pages
into HTML automatically, nor does it build a binary with the GLEW library.

You will need the windows platform SDK
  (instructions http://msdn.microsoft.com/vstudio/express/visualc/usingpsdk/default.aspx)
You will need the windows DirectX SDK
  (instructions at http://msdn.microsoft.com/directx/sdk/readmepage/default.aspx)
You will need to also install libCURL and curses (see above).
Use the VC8 projects in the win32 directory.

If you want to build with SDL (not recommended):
Choose the Lib tab, and add SDLMain.lib and SDL.lib. These can be
downloaded from libsdl.org. Also add the SDL include directory
to the Includes tab.  Next copy SDL.dll to the directory
that bzflag is running from, e.g. src/bzflag/SDL_Release or
src/bzflag/SDL_Debug.
When you want to build, set the active configuration to
"BZFlag - Win32 SDL_Release" or "BZFlag - Win32 SDL_Debug"
instead of the normal Win32 Release/Debug targets.
note the standard builds are not done with SDL, as SDL
does not provide all the same features as the native platform.
